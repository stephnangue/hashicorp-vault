---
- name: Login to configurator approle
  hosts: localhost
  gather_facts: false
  connection: local

  tasks:
    - set_fact:
        deploy_role_id: "{{ lookup('env', 'DEPLOY_ROLE_ID') }}"
        deploy_secret_id: "{{ lookup('env', 'DEPLOY_SECRET_ID') }}"

    - name: Login to deploy approle
      uri:
        url: "https://identity.{{ domain_name }}:8200/v1/auth/approle/login"
        method: POST
        return_content: yes
        body_format: json
        body: 
          role_id: "{{ deploy_role_id }}"
          secret_id: "{{ deploy_secret_id }}"
        headers:
          Content-type: "application/json"
      register: login_deploy

    - name: Read the configurator credentials
      uri:
        url: "https://identity.{{ domain_name }}:8200/v1/deploy/data/VAULT/{{ cluster_name }}"
        method: GET
        body_format: json
        headers:
          Content-type: "application/json"
          X-Vault-Token: "{{ login_deploy.json.auth.client_token }}"
      register: configurator_creds

    - name: Login to configurator approle
      uri:
        url: "https://vault.{{ domain_name }}/v1/auth/approle/login"
        method: POST
        return_content: yes
        body_format: json
        body: 
          role_id: "{{ configurator_creds.json.data.data.configurator_role_id }}"
          secret_id: "{{ configurator_creds.json.data.data.configurator_secret_id }}"
        headers:
          Content-type: "application/json"
      register: login_configurator


- name: Generate traffic
  hosts: localhost
  gather_facts: false
  connection: local

  environment:
    VAULT_ADDR: "https://vault.{{ domain_name }}"
    VAULT_TOKEN: "{{ login_configurator.json.auth.client_token }}"

  tasks:
    - set_fact:
        random_string: "{{ query('community.general.random_string', upper=false, numbers=false, special=false) }}"

    - name: Generate the config file   
      template:
        src: config.hcl.j2
        dest: "/tmp/{{ random_string }}_config.hcl"
        mode: '0644'
      vars:
        test_vault_namespace: "{{ vault_namespace }}"
        test_duration: "{{ duration }}"
        test_rps: "{{ rps }}"
        test_workers: "{{ workers }}"

    - name: Run the Benchmark
      ansible.builtin.shell: | 
        /usr/bin/vault-benchmark run -config=/tmp/{{ random_string }}_config.hcl
      register: bench
      failed_when: bench.rc != 0 and bench.rc != 1
      changed_when: bench.rc == 0



